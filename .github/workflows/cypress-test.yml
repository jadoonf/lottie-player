name: Cypress Tests

on:
  push:
    branches: [master]
  workflow_dispatch:
  pull_request:
    branches: [master]

jobs:
  cypress-version-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    strategy:
      matrix:
        node-version: [14.x]
        package-version: ['2.0.5', '2.0.4', '2.0.3']

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Extract package version ${{ matrix.package-version }}
        run: |
          mkdir -p test-versions/${{ matrix.package-version }}
          cp -r @lottiefiles_lottie-player_${{ matrix.package-version }}/* test-versions/${{ matrix.package-version }}/

      - name: Clean npm config and setup test version
        run: |
          echo "registry=https://registry.npmjs.org/" > .npmrc
          cd test-versions/${{ matrix.package-version }}
          # Update package.json to fix dependency issues
          jq '
            del(.dependencies["@lottiefiles/eslint-plugin"]) |
            .devDependencies["rollup"] = "^1.32.1" |
            .devDependencies["@types/node"] = "^14.x" |
            .devDependencies["webpack"] = "^5.x" |
            .devDependencies["babel-loader"] = "^9.x" |
            del(.devDependencies["rollup-plugin-terser"]) |
            .devDependencies["@rollup/plugin-terser"] = "^0.4.0"
          ' package.json > temp.json && mv temp.json package.json

      - name: Install dependencies for version ${{ matrix.package-version }}
        working-directory: test-versions/${{ matrix.package-version }}
        run: |
          npm install -g shx typescript
          yarn install --no-lockfile --ignore-optional --network-timeout 100000 --legacy-peer-deps
          npm install --no-package-lock --legacy-peer-deps

      - name: Build package version ${{ matrix.package-version }}
        working-directory: test-versions/${{ matrix.package-version }}
        run: |
          mkdir -p dist
          echo "export const LOTTIE_PLAYER_VERSION = '${{ matrix.package-version }}';" > src/versions.ts
          echo "export const LOTTIE_WEB_VERSION = '5.7.13';" >> src/versions.ts
          npm run build --legacy-peer-deps || true
        env:
          NODE_OPTIONS: --max-old-space-size=4096

      - name: Copy test files
        run: |
          cp -r cypress test-versions/${{ matrix.package-version }}/
          # Update test server to use correct dist path
          sed -i 's|../../dist|../dist|g' test-versions/${{ matrix.package-version }}/cypress/pages/server.js

      - name: Start test server for version ${{ matrix.package-version }}
        working-directory: test-versions/${{ matrix.package-version }}
        run: |
          node cypress/pages/server.js &
          sleep 5

      - uses: listendev/action@v0.11.0
        with:
          ci: 'only'
          jwt: ${{ secrets.LSTN_API_KEY }}
          lstn: 'v0.15.0'
          
      - name: Run Cypress tests for version ${{ matrix.package-version }}
        working-directory: test-versions/${{ matrix.package-version }}
        run: |
          cypress run --config-file cypress/support/index.js --spec cypress/integration/lottie-player/load_animation.spec.js
        env:
          CYPRESS_CACHE_FOLDER: ~/.cache/Cypress
          CYPRESS_VIDEO: false
          CYPRESS_SCREENSHOT_ON_FAILURE: true
          PACKAGE_VERSION: ${{ matrix.package-version }}
        continue-on-error: true

      - name: Upload test artifacts for version ${{ matrix.package-version }}
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: cypress-artifacts-${{ matrix.package-version }}
          path: |
            test-versions/${{ matrix.package-version }}/cypress/screenshots
            test-versions/${{ matrix.package-version }}/cypress/videos
            test-versions/${{ matrix.package-version }}/cypress/logs

      - name: Generate test coverage for version ${{ matrix.package-version }}
        if: always()
        working-directory: test-versions/${{ matrix.package-version }}
        run: |
          npx nyc report --reporter=text-summary
          npx nyc report --reporter=html
      - name: Upload coverage report for version ${{ matrix.package-version }}
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: coverage-report-${{ matrix.package-version }}
          path: 'test-versions/${{ matrix.package-version }}/coverage/'

      - name: Stop test server
        if: always()
        run: |
          pkill -f "node cypress/pages/server.js" || true
      - name: Generate version comparison report
        if: always()
        run: |
          echo "# Lottie Player Version Test Report" > version-report.md
          echo "Version: ${{ matrix.package-version }}" >> version-report.md
          echo "Test Date: $(date)" >> version-report.md
          echo "## Test Results" >> version-report.md
          echo "- Load Animation Tests: $([ $? -eq 0 ] && echo 'PASSED' || echo 'FAILED')" >> version-report.md

      - name: Upload version comparison report
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: version-comparison-report
          path: version-report.md