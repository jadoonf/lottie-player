name: Cypress Tests

on:
  push:
    branches: ['*']
  workflow_dispatch:
  pull_request:
    branches: ['*']

jobs:
  test-2-0-4:
    name: Test v2.0.4 (Local)
    runs-on: ubuntu-latest
    timeout-minutes: 15
    continue-on-error: true
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 14.x

      - name: Setup test environment
        run: |
          mkdir -p test-env
          cp -r @lottiefiles_lottie-player_2.0.4/* test-env/
          cd test-env
          # Create minimal package.json with only required dependencies
          echo '{
            "name": "lottie-player-test",
            "version": "2.0.4",
            "dependencies": {
              "@types/pako": "^1.0.1",
              "lit": "^2.1.2",
              "lottie-web": "^5.12.2",
              "pako": "^2.0.4",
              "resize-observer-polyfill": "^1.5.1",
              "fastify": "^3.25.3",
              "fastify-static": "^4.5.0"
            },
            "devDependencies": {
              "@babel/core": "^7.11.0",
              "@babel/plugin-transform-class-properties": "^7.22.5",
              "@babel/preset-env": "^7.11.0",
              "@babel/preset-typescript": "^7.10.4",
              "@rollup/plugin-babel": "^5.1.0",
              "@rollup/plugin-commonjs": "^21.0.1",
              "@rollup/plugin-node-resolve": "^13.1.3",
              "@rollup/plugin-terser": "^0.4.0",
              "typescript": "4.5.5",
              "rollup": "^2.38.0",
              "cypress": "9.2.1",
              "@cypress/code-coverage": "^3.9.12"
            },
            "scripts": {
              "build": "rollup -c",
              "test": "cypress run",
              "serve": "node cypress/pages/server.js"
            }
          }' > package.json

      - name: Create Cypress config
        working-directory: test-env
        run: |
          echo '{
            "baseUrl": "http://localhost:8000",
            "video": false,
            "screenshotOnRunFailure": true,
            "defaultCommandTimeout": 10000,
            "supportFile": "cypress/support/index.js"
          }' > cypress.json

      - name: Install dependencies
        working-directory: test-env
        run: |
          npm install --no-package-lock --legacy-peer-deps

      - name: Create rollup config
        working-directory: test-env
        run: |
          echo 'import babel from "@rollup/plugin-babel";
          import commonjs from "@rollup/plugin-commonjs";
          import resolve from "@rollup/plugin-node-resolve";
          import terser from "@rollup/plugin-terser";
          
          export default {
            input: "./src/lottie-player.ts",
            output: [
              {
                file: "./dist/lottie-player.js",
                format: "umd",
                name: "lottie-player",
                sourcemap: true
              }
            ],
            plugins: [
              resolve({
                browser: true
              }),
              commonjs(),
              babel({
                babelHelpers: "bundled",
                extensions: [".ts"],
                presets: ["@babel/preset-typescript"]
              }),
              terser()
            ]
          };' > rollup.config.js

      - name: Build project
        working-directory: test-env
        run: |
          mkdir -p dist
          npm run build || true

      - name: Setup test files
        working-directory: test-env
        run: |
          cp -r ../cypress .
          mkdir -p cypress/support
          echo "import './commands'" > cypress/support/index.js
          echo "// Custom commands here" > cypress/support/commands.js

      - name: Start server and run tests
        working-directory: test-env
        run: |
          npm run serve &
          sleep 5
          npx cypress run --spec "cypress/integration/lottie-player/load_animation.spec.js"

      - name: Upload results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: results-2.0.4
          path: |
            test-env/cypress/screenshots
            test-env/cypress/videos

  test-2-0-5:
    name: Test v2.0.5 (Local)
    runs-on: ubuntu-latest
    timeout-minutes: 15
    continue-on-error: true
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 14.x

      - name: Setup test environment
        run: |
          mkdir -p test-env
          cp -r @lottiefiles_lottie-player_2.0.5/* test-env/

      - name: Install dependencies
        working-directory: test-env
        run: |
          npm install --no-package-lock --legacy-peer-deps
          npm install cypress@9.2.1 @cypress/code-coverage --no-package-lock --legacy-peer-deps

      - name: Build and test
        working-directory: test-env
        run: |
          mkdir -p dist
          npm run build || true
          cp -r ../cypress .
          node cypress/pages/server.js &
          sleep 5
          npx cypress run --spec "cypress/integration/lottie-player/load_animation.spec.js"

      - name: Upload results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: results-2.0.5
          path: test-env/cypress/screenshots

  test-2-0-8:
    name: Test v2.0.8 (Registry)
    runs-on: ubuntu-latest
    timeout-minutes: 15
    continue-on-error: true
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 14.x

      - name: Setup test environment
        run: |
          mkdir -p test-env
          cd test-env
          npm init -y
          npm install @lottiefiles/lottie-player@2.0.8 --save-exact
          cp -r node_modules/@lottiefiles/lottie-player/* .

      - name: Install dependencies
        working-directory: test-env
        run: |
          npm install --no-package-lock --legacy-peer-deps
          npm install cypress@9.2.1 @cypress/code-coverage --no-package-lock --legacy-peer-deps

      - name: Build and test
        working-directory: test-env
        run: |
          mkdir -p dist
          npm run build || true
          cp -r ../cypress .
          node cypress/pages/server.js &
          sleep 5
          npx cypress run --spec "cypress/integration/lottie-player/load_animation.spec.js"

      - name: Upload results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: results-2.0.8
          path: test-env/cypress/screenshots

  generate-report:
    needs: [test-2-0-4, test-2-0-5, test-2-0-8]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts

      - name: Generate comparison report
        run: |
          echo "# Lottie Player Version Test Results" > report.md
          echo "Generated: $(date)" >> report.md
          echo "" >> report.md
          
          echo "## Version 2.0.4 (Local)" >> report.md
          if [ -d "artifacts/results-2.0.4" ]; then
            echo "✅ Tests completed" >> report.md
            ls -la artifacts/results-2.0.4 >> report.md
          else
            echo "❌ Tests failed or not completed" >> report.md
          fi
          echo "" >> report.md
          
          echo "## Version 2.0.5 (Local)" >> report.md
          if [ -d "artifacts/results-2.0.5" ]; then
            echo "✅ Tests completed" >> report.md
            ls -la artifacts/results-2.0.5 >> report.md
          else
            echo "❌ Tests failed or not completed" >> report.md
          fi
          echo "" >> report.md
          
          echo "## Version 2.0.8 (Registry)" >> report.md
          if [ -d "artifacts/results-2.0.8" ]; then
            echo "✅ Tests completed" >> report.md
            ls -la artifacts/results-2.0.8 >> report.md
          else
            echo "❌ Tests failed or not completed" >> report.md
          fi

      - name: Upload final report
        uses: actions/upload-artifact@v3
        with:
          name: version-comparison-report
          path: report.md
