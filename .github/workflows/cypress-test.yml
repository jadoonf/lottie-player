name: Cypress Tests

on:
  push:
    branches: ['*']
  workflow_dispatch:
  pull_request:
    branches: ['*']

jobs:
  cypress-version-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    strategy:
      matrix:
        node-version: [14.x]
        package-version: ['2.0.4', '2.0.5', '2.0.8']
        include:
          - package-version: '2.0.4'
            source: 'local'
          - package-version: '2.0.5'
            source: 'local'
          - package-version: '2.0.8'
            source: 'registry'

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Setup test environment for ${{ matrix.package-version }}
        run: |
          mkdir -p test-versions/${{ matrix.package-version }}
          if [ "${{ matrix.source }}" = "local" ]; then
            cp -r @lottiefiles_lottie-player_${{ matrix.package-version }}/* test-versions/${{ matrix.package-version }}/
          else
            cd test-versions/${{ matrix.package-version }}
            npm init -y
            npm install @lottiefiles/lottie-player@${{ matrix.package-version }} --save-exact
            # Extract the installed package contents
            cp -r node_modules/@lottiefiles/lottie-player/* .
          fi

      - name: Clean npm config and setup test version
        run: |
          echo "registry=https://registry.npmjs.org/" > .npmrc
          cd test-versions/${{ matrix.package-version }}
          # Update package.json to fix dependency issues
          jq '
            del(.dependencies["@lottiefiles/eslint-plugin"]) |
            .devDependencies["rollup"] = "^1.32.1" |
            .devDependencies["@types/node"] = "^14.x" |
            .devDependencies["webpack"] = "^5.x" |
            .devDependencies["babel-loader"] = "^9.x" |
            .devDependencies["glob"] = "^9.3.5" |
            .devDependencies["rimraf"] = "^5.0.0" |
            del(.devDependencies["rollup-plugin-terser"]) |
            .devDependencies["@rollup/plugin-terser"] = "^0.4.0"
          ' package.json > temp.json && mv temp.json package.json

      - uses: listendev/action@v0.11.0
        with:
          ci: 'only'
          jwt: ${{ secrets.LSTN_API_KEY }}
          lstn: 'v0.15.0'

      - name: Install dependencies for version ${{ matrix.package-version }}
        working-directory: test-versions/${{ matrix.package-version }}
        run: |
          # Create minimal package.json for test environment
          echo '{
            "dependencies": {
              "lottie-web": "^5.12.2"
            },
            "devDependencies": {
              "typescript": "4.5.5",
              "cypress": "9.2.1",
              "@cypress/code-coverage": "^3.9.12",
              "glob": "^9.3.5",
              "rimraf": "^5.0.0"
            }
          }' > package.json
          
          # Install dependencies
          npm install --no-package-lock --legacy-peer-deps
        continue-on-error: true

      - name: Build package version ${{ matrix.package-version }}
        working-directory: test-versions/${{ matrix.package-version }}
        run: |
          mkdir -p dist
          if [ ! -f "src/versions.ts" ]; then
            mkdir -p src
            echo "export const LOTTIE_PLAYER_VERSION = '${{ matrix.package-version }}';" > src/versions.ts
            echo "export const LOTTIE_WEB_VERSION = '5.7.13';" >> src/versions.ts
          fi
          npm run build --legacy-peer-deps || true
        continue-on-error: true

      - name: Copy test files
        run: |
          cp -r cypress test-versions/${{ matrix.package-version }}/
          sed -i 's|../../dist|../dist|g' test-versions/${{ matrix.package-version }}/cypress/pages/server.js

      - name: Install Cypress
        working-directory: test-versions/${{ matrix.package-version }}
        run: |
          npm install cypress@9.2.1 @cypress/code-coverage --no-package-lock --legacy-peer-deps
          npx cypress verify

      - name: Start test server for version ${{ matrix.package-version }}
        working-directory: test-versions/${{ matrix.package-version }}
        run: |
          node cypress/pages/server.js &
          sleep 5

      - name: Run Cypress tests
        working-directory: test-versions/${{ matrix.package-version }}
        run: |
          npx cypress run --spec "cypress/integration/lottie-player/load_animation.spec.js"
        env:
          CYPRESS_CACHE_FOLDER: ~/.cache/Cypress
          CYPRESS_VIDEO: false
          CYPRESS_SCREENSHOT_ON_FAILURE: true
          PACKAGE_VERSION: ${{ matrix.package-version }}

      - name: Generate version comparison report
        if: always()
        run: |
          echo "# Lottie Player Version Test Report" > test-versions/${{ matrix.package-version }}/version-report.md
          echo "Version: ${{ matrix.package-version }} (Source: ${{ matrix.source }})" >> test-versions/${{ matrix.package-version }}/version-report.md
          echo "Test Date: $(date)" >> test-versions/${{ matrix.package-version }}/version-report.md
          echo "## Test Results" >> test-versions/${{ matrix.package-version }}/version-report.md
          echo "- Load Animation Tests: $([ $? -eq 0 ] && echo 'PASSED' || echo 'FAILED')" >> test-versions/${{ matrix.package-version }}/version-report.md

      - name: Upload test artifacts
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-artifacts-${{ matrix.package-version }}
          path: |
            test-versions/${{ matrix.package-version }}/version-report.md
            test-versions/${{ matrix.package-version }}/cypress/screenshots
            test-versions/${{ matrix.package-version }}/cypress/videos
            test-versions/${{ matrix.package-version }}/coverage

      - name: Stop test server
        if: always()
        run: |
          pkill -f "node cypress/pages/server.js" || true

  generate-comparison:
    needs: cypress-version-tests
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts

      - name: Generate combined report
        run: |
          echo "# Lottie Player Version Comparison Report" > comparison-report.md
          echo "Generated: $(date)" >> comparison-report.md
          echo "" >> comparison-report.md
          
          for version in 2.0.4 2.0.5 2.0.8; do
            echo "## Version $version Results" >> comparison-report.md
            if [ -f "artifacts/test-artifacts-$version/version-report.md" ]; then
              cat "artifacts/test-artifacts-$version/version-report.md" >> comparison-report.md
            else
              echo "No test results available" >> comparison-report.md
            fi
            echo "" >> comparison-report.md
          done

      - name: Upload combined report
        uses: actions/upload-artifact@v3
        with:
          name: version-comparison-report
          path: comparison-report.md
