name: Release

on:
  push:
    branches: [master]
  workflow_dispatch: 

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    strategy:
      matrix:
        node-version: [14.x]

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Cache NPM
        uses: actions/cache@v2
        env:
          cache-name: cache-npm
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/yarn-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Clean npm config and update package.json
        run: |
          echo "registry=https://registry.npmjs.org/" > .npmrc
          # Update package.json to match 2.0.4 version
          jq '
            del(.dependencies["@lottiefiles/eslint-plugin"]) |
            .devDependencies["rollup"] = "^2.23.0" |
            .devDependencies["rollup-plugin-terser"] = "^7.0.2" |
            .devDependencies["rollup-plugin-typescript2"] = "^0.31.1" |
            .devDependencies["rollup-plugin-uglify"] = "^6.0.4" |
            .devDependencies["rollup-plugin-visualizer"] = "^5.5.4" |
            .devDependencies["@rollup/plugin-commonjs"] = "^21.0.1" |
            .devDependencies["@rollup/plugin-node-resolve"] = "^13.1.3"
          ' package.json > temp.json && mv temp.json package.json
      - name: Install global dependencies
        run: |
          npm install -g shx
          npm install -g typescript
      - name: Install dependencies
        run: |
          yarn install --no-lockfile --ignore-optional --network-timeout 100000 --legacy-peer-deps
          npm install --no-package-lock --legacy-peer-deps
        continue-on-error: true
      - name: Create dist directory
        run: |
          mkdir -p dist
      - uses: listendev/action@v0.11.0
        with:
          ci: 'only'
          jwt: ${{ secrets.LSTN_API_KEY }}
          lstn: 'v0.15.0'
      - name: Generate versions file
        run: |
          VERSION=$(node -p "require('./package.json').version")
          LOTTIE_VERSION=$(node -p "require('./package.json').dependencies['lottie-web']")
          echo "export const LOTTIE_PLAYER_VERSION = '$VERSION';" > src/versions.ts
          echo "export const LOTTIE_WEB_VERSION = '$LOTTIE_VERSION';" >> src/versions.ts
      - name: Build project
        run: |
          npm run cleanup
          npm run build-lottie
          npm run build-tgs
        env:
          NODE_OPTIONS: --max-old-space-size=4096
        continue-on-error: true
      - name: Run tests
        run: yarn test
        continue-on-error: true

  simulate-release:
    needs: build
    name: Simulate Release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: https://registry.npmjs.org/
      - name: Clean npm config and update package.json
        run: |
          echo "registry=https://registry.npmjs.org/" > .npmrc
          # Update package.json to match 2.0.4 version
          jq '
            del(.dependencies["@lottiefiles/eslint-plugin"]) |
            .devDependencies["rollup"] = "^2.23.0" |
            .devDependencies["rollup-plugin-terser"] = "^7.0.2" |
            .devDependencies["rollup-plugin-typescript2"] = "^0.31.1" |
            .devDependencies["rollup-plugin-uglify"] = "^6.0.4" |
            .devDependencies["rollup-plugin-visualizer"] = "^5.5.4" |
            .devDependencies["@rollup/plugin-commonjs"] = "^21.0.1" |
            .devDependencies["@rollup/plugin-node-resolve"] = "^13.1.3"
          ' package.json > temp.json && mv temp.json package.json
      - name: Install global dependencies
        run: |
          npm install -g shx
          npm install -g typescript
      - uses: listendev/action@v0.11.0
        with:
          ci: 'only'
          jwt: ${{ secrets.LSTN_API_KEY }}
          lstn: 'v0.15.0'
      - name: Install dependencies
        run: |
          yarn install --no-lockfile --ignore-optional --network-timeout 100000 --legacy-peer-deps
          npm install --no-package-lock --legacy-peer-deps
        continue-on-error: true
      - name: Create dist directory
        run: |
          mkdir -p dist
      - name: Generate versions file
        run: |
          VERSION=$(node -p "require('./package.json').version")
          LOTTIE_VERSION=$(node -p "require('./package.json').dependencies['lottie-web']")
          echo "export const LOTTIE_PLAYER_VERSION = '$VERSION';" > src/versions.ts
          echo "export const LOTTIE_WEB_VERSION = '$LOTTIE_VERSION';" >> src/versions.ts
      - name: Build project
        run: |
          npm run cleanup
          npm run build-lottie
          npm run build-tgs
        env:
          NODE_OPTIONS: --max-old-space-size=4096
      - name: Pack and verify package
        run: |
          npm pack
          echo "Package contents that would be published:"
          tar -tzf *.tgz || true
          echo "Package would be published to npm registry (simulation only)"
